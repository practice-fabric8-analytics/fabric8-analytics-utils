
name: CI

on:
  pull_request:
    branches: [ master ]
   
jobs:
  setmatrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      run: echo "::set-output name=matrix::{\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}"
  Linter-docstyle:
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        scripts:
          - run-linter
          - check-docstyle
          - detect-dead-code
          - detect-common-errors      
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'
    - name: ${{ matrix.scripts }}
      run: bash qa/${{ matrix.scripts }}.sh;
  CC-and-MI:
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        scripts: ["measure-cyclomatic-complexity","measure-maintainability-index"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'
    - name: Run  ${{ matrix.scripts }}
      run: bash qa/${{ matrix.scripts }}.sh --fail-on-error
  Run-Tests:
    needs: setmatrix
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'
    - name: Run Unit Tests
      run:  bash qa/actions-run-tests.sh
    - name: Upload Code coverage
      uses: codecov/codecov-action@v1 
      with:
          file: coverage.xml # optional
    - name: Run Matrix
      run: echo ${{fromJson(needs.setmatrix.outputs.matrix)}}
